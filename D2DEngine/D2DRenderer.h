#pragma once
#include <d2d1.h>

class BitmapScene;
class D2DRenderer
{
public:
	D2DRenderer();
	~D2DRenderer();

	static D2D1_MATRIX_3X2_F m_CameraWorldInverse;		// 카메라의 좌표계로 변환하는 카메라 월드의 역행렬
	static D2DRenderer* Instance;					// 싱글톤 인스턴스

	void Initialize(HWND hWnd);
	void Uninitialize();

	ID2D1Factory* GetFactory() { return m_pD2DFactory; }
	ID2D1HwndRenderTarget* GetRenderTarget() { return m_pRenderTarget; }
	size_t GetUsedVRAM();
public:
	ID2D1Factory* m_pD2DFactory;		// D2D 개체 인터페이스 포인터 변수
	ID2D1HwndRenderTarget* m_pRenderTarget;
	IWICImagingFactory* m_pWICFactory;	// D2D비트맵 생성을 위한 이미지 처리 인터페이스
	IDWriteFactory* m_pDWriteFactory;	// TextFormat생성을 위한 팩토리
	IDWriteTextFormat* m_pDWriteTextFormat; // 기본 텍스트 출력을 위한 Format
	ID2D1SolidColorBrush* m_pBrushRed;	// 렌더타겟이 생성하는 리소스 역시 장치의존

	IDXGIFactory4* m_pDXGIFactory;		// DXGI팩토리
	IDXGIAdapter3* m_pDXGIAdapter;		// 비디오카드 정보에 접근 가능한 인터페이스
	HWND m_hWnd;						// 렌더타겟을 생성할 윈도우 핸들
	D2D_SIZE_U	m_ClientSize;			// 렌더타겟의 크기
};




